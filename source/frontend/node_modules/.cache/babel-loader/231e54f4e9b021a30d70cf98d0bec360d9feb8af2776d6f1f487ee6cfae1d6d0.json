{"ast":null,"code":"// In songApi.js\nimport { apiRequest } from './api'; // 1. Import the helper\n\n// 2. Remove the old BASE_URL. apiRequest uses API_GATEWAY_URL\n\nexport async function getSongs() {\n  // 3. Use apiRequest for all functions\n  return apiRequest('/songs');\n}\nexport async function getSongsByArtistId(artistId) {\n  // Use apiRequest to send the auth token automatically\n  return apiRequest(`/songs/artist/${artistId}`);\n}\nexport async function getSong(id) {\n  return apiRequest(`/songs/${id}`);\n}\nexport async function uploadSong({\n  file,\n  title,\n  artist,\n  artistId,\n  album,\n  genre\n}) {\n  const formData = new FormData();\n  if (file) formData.append(\"file\", file);\n  formData.append(\"title\", title);\n  formData.append(\"artist\", artist);\n  formData.append(\"artistId\", artistId);\n  formData.append(\"album\", album);\n  formData.append(\"genre\", genre);\n\n  // 4. Use apiRequest for the upload\n  return apiRequest('/songs/upload', {\n    method: \"POST\",\n    body: formData // The change in api.js will handle this correctly\n  });\n}\nexport async function updateSong(id, song) {\n  return apiRequest(`/songs/${id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(song) // apiRequest will set 'Content-Type: json'\n  });\n}\nexport async function deleteSong(id) {\n  return apiRequest(`/songs/${id}`, {\n    method: \"DELETE\"\n  });\n}","map":{"version":3,"names":["apiRequest","getSongs","getSongsByArtistId","artistId","getSong","id","uploadSong","file","title","artist","album","genre","formData","FormData","append","method","body","updateSong","song","JSON","stringify","deleteSong"],"sources":["/Users/onorio21/VSCode/NuwHarmonics/1892929_NewHarmonics/newharmonics/src/api/songApi.js"],"sourcesContent":["// In songApi.js\nimport { apiRequest } from './api'; // 1. Import the helper\n\n// 2. Remove the old BASE_URL. apiRequest uses API_GATEWAY_URL\n\nexport async function getSongs() {\n  // 3. Use apiRequest for all functions\n  return apiRequest('/songs');\n}\n\nexport async function getSongsByArtistId(artistId) {\n  // Use apiRequest to send the auth token automatically\n  return apiRequest(`/songs/artist/${artistId}`);\n}\n\nexport async function getSong(id) {\n  return apiRequest(`/songs/${id}`);\n}\n\nexport async function uploadSong({ file, title, artist, artistId, album, genre }) {\n  const formData = new FormData();\n  if (file) formData.append(\"file\", file);\n  formData.append(\"title\", title);\n  formData.append(\"artist\", artist);\n  formData.append(\"artistId\", artistId);\n  formData.append(\"album\", album);\n  formData.append(\"genre\", genre);\n\n  // 4. Use apiRequest for the upload\n  return apiRequest('/songs/upload', {\n    method: \"POST\",\n    body: formData, // The change in api.js will handle this correctly\n  });\n}\n\nexport async function updateSong(id, song) {\n  return apiRequest(`/songs/${id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(song), // apiRequest will set 'Content-Type: json'\n  });\n}\n\nexport async function deleteSong(id) {\n  return apiRequest(`/songs/${id}`, { method: \"DELETE\" });\n}"],"mappings":"AAAA;AACA,SAASA,UAAU,QAAQ,OAAO,CAAC,CAAC;;AAEpC;;AAEA,OAAO,eAAeC,QAAQA,CAAA,EAAG;EAC/B;EACA,OAAOD,UAAU,CAAC,QAAQ,CAAC;AAC7B;AAEA,OAAO,eAAeE,kBAAkBA,CAACC,QAAQ,EAAE;EACjD;EACA,OAAOH,UAAU,CAAC,iBAAiBG,QAAQ,EAAE,CAAC;AAChD;AAEA,OAAO,eAAeC,OAAOA,CAACC,EAAE,EAAE;EAChC,OAAOL,UAAU,CAAC,UAAUK,EAAE,EAAE,CAAC;AACnC;AAEA,OAAO,eAAeC,UAAUA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,MAAM;EAAEN,QAAQ;EAAEO,KAAK;EAAEC;AAAM,CAAC,EAAE;EAChF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/B,IAAIN,IAAI,EAAEK,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEP,IAAI,CAAC;EACvCK,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEN,KAAK,CAAC;EAC/BI,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEL,MAAM,CAAC;EACjCG,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEX,QAAQ,CAAC;EACrCS,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,KAAK,CAAC;EAC/BE,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,KAAK,CAAC;;EAE/B;EACA,OAAOX,UAAU,CAAC,eAAe,EAAE;IACjCe,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEJ,QAAQ,CAAE;EAClB,CAAC,CAAC;AACJ;AAEA,OAAO,eAAeK,UAAUA,CAACZ,EAAE,EAAEa,IAAI,EAAE;EACzC,OAAOlB,UAAU,CAAC,UAAUK,EAAE,EAAE,EAAE;IAChCU,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEG,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,CAAE;EAC9B,CAAC,CAAC;AACJ;AAEA,OAAO,eAAeG,UAAUA,CAAChB,EAAE,EAAE;EACnC,OAAOL,UAAU,CAAC,UAAUK,EAAE,EAAE,EAAE;IAAEU,MAAM,EAAE;EAAS,CAAC,CAAC;AACzD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}