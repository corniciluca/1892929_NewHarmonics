{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC-L\\\\Desktop\\\\NewHarmonies\\\\gateway-user-song\\\\1892929_NewHarmonics\\\\source\\\\frontend\\\\src\\\\routes\\\\test.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadSongTest() {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [album, setAlbum] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const [ok, setOk] = useState(null);\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setError(null);\n    setOk(null);\n    const formData = new FormData();\n    if (file) formData.append(\"file\", file);\n    formData.append(\"title\", title);\n    formData.append(\"artist\", artist);\n    formData.append(\"album\", album);\n    formData.append(\"genre\", genre);\n    try {\n      const res = await fetch(\"http://localhost:8082/songs/upload\", {\n        // Or \"http://localhost:8082/songs/upload\" for direct service call\n        method: \"POST\",\n        body: formData\n      });\n      if (!res.ok) {\n        const errorText = await res.text();\n        throw new Error(`API error: ${res.status} - ${errorText}`);\n      }\n      const data = await res.json();\n      setOk(\"Song uploaded: \" + JSON.stringify(data));\n    } catch (e) {\n      console.error(\"Fetch error:\", e);\n      setError(e.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 400,\n      margin: \"2em auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Song Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          display: \"block\",\n          marginBottom: 10\n        },\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          display: \"block\",\n          marginBottom: 10\n        },\n        value: artist,\n        onChange: e => setArtist(e.target.value),\n        placeholder: \"Artist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          display: \"block\",\n          marginBottom: 10\n        },\n        value: album,\n        onChange: e => setAlbum(e.target.value),\n        placeholder: \"Album\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          display: \"block\",\n          marginBottom: 10\n        },\n        value: genre,\n        onChange: e => setGenre(e.target.value),\n        placeholder: \"Genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          display: \"block\",\n          marginBottom: 10\n        },\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload Song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), ok && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"green\",\n        marginTop: 10\n      },\n      children: ok\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 14\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\",\n        marginTop: 10\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadSongTest, \"3myGtJCgBLQzAQlUQv1svk++eyA=\");\n_c = UploadSongTest;\nvar _c;\n$RefreshReg$(_c, \"UploadSongTest\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadSongTest","_s","title","setTitle","artist","setArtist","album","setAlbum","genre","setGenre","file","setFile","error","setError","ok","setOk","handleSubmit","e","preventDefault","formData","FormData","append","res","fetch","method","body","errorText","text","Error","status","data","json","JSON","stringify","console","message","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","display","marginBottom","value","onChange","target","placeholder","required","type","files","color","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/PC-L/Desktop/NewHarmonies/gateway-user-song/1892929_NewHarmonics/source/frontend/src/routes/test.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function UploadSongTest() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [artist, setArtist] = useState(\"\");\r\n  const [album, setAlbum] = useState(\"\");\r\n  const [genre, setGenre] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [ok, setOk] = useState(null);\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setOk(null);\r\n\r\n    const formData = new FormData();\r\n    if (file) formData.append(\"file\", file);\r\n    formData.append(\"title\", title);\r\n    formData.append(\"artist\", artist);\r\n    formData.append(\"album\", album);\r\n    formData.append(\"genre\", genre);\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:8082/songs/upload\", { // Or \"http://localhost:8082/songs/upload\" for direct service call\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const errorText = await res.text();\r\n        throw new Error(`API error: ${res.status} - ${errorText}`);\r\n      }\r\n\r\n      const data = await res.json();\r\n      setOk(\"Song uploaded: \" + JSON.stringify(data));\r\n    } catch (e) {\r\n      console.error(\"Fetch error:\", e);\r\n      setError(e.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ maxWidth: 400, margin: \"2em auto\" }}>\r\n      <h2>Upload Song Test</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          style={{ display: \"block\", marginBottom: 10 }}\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          placeholder=\"Title\"\r\n          required\r\n        />\r\n        <input\r\n          style={{ display: \"block\", marginBottom: 10 }}\r\n          value={artist}\r\n          onChange={(e) => setArtist(e.target.value)}\r\n          placeholder=\"Artist\"\r\n        />\r\n        <input\r\n          style={{ display: \"block\", marginBottom: 10 }}\r\n          value={album}\r\n          onChange={(e) => setAlbum(e.target.value)}\r\n          placeholder=\"Album\"\r\n        />\r\n        <input\r\n          style={{ display: \"block\", marginBottom: 10 }}\r\n          value={genre}\r\n          onChange={(e) => setGenre(e.target.value)}\r\n          placeholder=\"Genre\"\r\n        />\r\n        <input\r\n          style={{ display: \"block\", marginBottom: 10 }}\r\n          type=\"file\"\r\n          onChange={(e) => setFile(e.target.files[0])}\r\n        />\r\n        <button type=\"submit\">Upload Song</button>\r\n      </form>\r\n      {ok && <div style={{ color: \"green\", marginTop: 10 }}>{ok}</div>}\r\n      {error && (\r\n        <div style={{ color: \"red\", marginTop: 10 }}>Error: {error}</div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}