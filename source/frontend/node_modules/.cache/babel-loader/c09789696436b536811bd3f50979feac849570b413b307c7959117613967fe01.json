{"ast":null,"code":"// This now points to the API Gateway, which will route to the song service\nconst BASE_URL = \"http://localhost:8082/songs\";\nexport async function getSongs() {\n  const res = await fetch(BASE_URL);\n  return res.json();\n}\nexport async function getSong(id) {\n  const res = await fetch(`${BASE_URL}/${id}`);\n  return res.json();\n}\nexport async function uploadSong({\n  file,\n  title,\n  artist,\n  album,\n  genre\n}) {\n  const formData = new FormData();\n  if (file) formData.append(\"file\", file);\n  formData.append(\"title\", title);\n  formData.append(\"artist\", artist);\n  formData.append(\"album\", album);\n  formData.append(\"genre\", genre);\n\n  // Note: The upload path is directly to the service for now\n  const res = await fetch(`http://localhost:8082/songs/upload`, {\n    method: \"POST\",\n    body: formData\n  });\n  if (!res.ok) throw new Error(await res.text());\n  return res.json();\n}\nexport async function updateSong(id, song) {\n  const res = await fetch(`${BASE_URL}/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(song)\n  });\n  return res.json();\n}\nexport async function deleteSong(id) {\n  return fetch(`${BASE_URL}/${id}`, {\n    method: \"DELETE\"\n  });\n}","map":{"version":3,"names":["BASE_URL","getSongs","res","fetch","json","getSong","id","uploadSong","file","title","artist","album","genre","formData","FormData","append","method","body","ok","Error","text","updateSong","song","headers","JSON","stringify","deleteSong"],"sources":["C:/Users/PC-L/Desktop/NewHarmonies/gateway-user-song/1892929_NewHarmonics/source/frontend/src/api/songApi.js"],"sourcesContent":["// This now points to the API Gateway, which will route to the song service\r\nconst BASE_URL = \"http://localhost:8082/songs\";\r\n\r\nexport async function getSongs() {\r\n  const res = await fetch(BASE_URL);\r\n  return res.json();\r\n}\r\n\r\nexport async function getSong(id) {\r\n  const res = await fetch(`${BASE_URL}/${id}`);\r\n  return res.json();\r\n}\r\n\r\nexport async function uploadSong({ file, title, artist, album, genre }) {\r\n  const formData = new FormData();\r\n  if (file) formData.append(\"file\", file);\r\n  formData.append(\"title\", title);\r\n  formData.append(\"artist\", artist);\r\n  formData.append(\"album\", album);\r\n  formData.append(\"genre\", genre);\r\n\r\n  // Note: The upload path is directly to the service for now\r\n  const res = await fetch(`http://localhost:8082/songs/upload`, {\r\n    method: \"POST\",\r\n    body: formData,\r\n  });\r\n  if (!res.ok) throw new Error(await res.text());\r\n  return res.json();\r\n}\r\n\r\nexport async function updateSong(id, song) {\r\n  const res = await fetch(`${BASE_URL}/${id}`, {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(song),\r\n  });\r\n  return res.json();\r\n}\r\n\r\nexport async function deleteSong(id) {\r\n  return fetch(`${BASE_URL}/${id}`, { method: \"DELETE\" });\r\n}"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,6BAA6B;AAE9C,OAAO,eAAeC,QAAQA,CAAA,EAAG;EAC/B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACH,QAAQ,CAAC;EACjC,OAAOE,GAAG,CAACE,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeC,OAAOA,CAACC,EAAE,EAAE;EAChC,MAAMJ,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,IAAIM,EAAE,EAAE,CAAC;EAC5C,OAAOJ,GAAG,CAACE,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeG,UAAUA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,MAAM;EAAEC,KAAK;EAAEC;AAAM,CAAC,EAAE;EACtE,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/B,IAAIN,IAAI,EAAEK,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEP,IAAI,CAAC;EACvCK,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEN,KAAK,CAAC;EAC/BI,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEL,MAAM,CAAC;EACjCG,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,KAAK,CAAC;EAC/BE,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,KAAK,CAAC;;EAE/B;EACA,MAAMV,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;IAC5Da,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEJ;EACR,CAAC,CAAC;EACF,IAAI,CAACX,GAAG,CAACgB,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,MAAMjB,GAAG,CAACkB,IAAI,CAAC,CAAC,CAAC;EAC9C,OAAOlB,GAAG,CAACE,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeiB,UAAUA,CAACf,EAAE,EAAEgB,IAAI,EAAE;EACzC,MAAMpB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,IAAIM,EAAE,EAAE,EAAE;IAC3CU,MAAM,EAAE,KAAK;IACbO,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CN,IAAI,EAAEO,IAAI,CAACC,SAAS,CAACH,IAAI;EAC3B,CAAC,CAAC;EACF,OAAOpB,GAAG,CAACE,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAesB,UAAUA,CAACpB,EAAE,EAAE;EACnC,OAAOH,KAAK,CAAC,GAAGH,QAAQ,IAAIM,EAAE,EAAE,EAAE;IAAEU,MAAM,EAAE;EAAS,CAAC,CAAC;AACzD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}