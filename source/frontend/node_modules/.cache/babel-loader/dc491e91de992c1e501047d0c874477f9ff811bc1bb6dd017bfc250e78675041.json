{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC-L\\\\Desktop\\\\NewHarmonies\\\\gateway-user-song\\\\1892929_NewHarmonics\\\\source\\\\frontend\\\\src\\\\routes\\\\Notification.js\";\nimport React from 'react';\nimport { Container, Typography, Box, Avatar, Paper, Stack, Button } from '@mui/material';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\n\n// Example notifications, replace with your dynamic data!\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst notifications = [{\n  id: 1,\n  user: 'Username',\n  type: 'posted',\n  message: 'posted a new song!',\n  link: '/song/1'\n}, {\n  id: 2,\n  user: 'Username',\n  type: 'liked',\n  message: 'liked your song!',\n  link: '/song/2'\n}, {\n  id: 3,\n  user: 'Username',\n  type: 'posted',\n  message: 'posted a new song!',\n  link: '/song/3'\n}];\nexport default function Notification() {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 6,\n      mb: 6\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      fontWeight: 600,\n      align: \"center\",\n      sx: {\n        mb: 4\n      },\n      children: \"Latest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 4,\n      children: notifications.map(notif => /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 2,\n        sx: {\n          borderRadius: 4,\n          p: 2,\n          px: 4,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: '#7e57c2',\n              mr: 2,\n              width: 56,\n              height: 56\n            },\n            children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            fontSize: 20,\n            fontWeight: 500,\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: notif.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), \" \", notif.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          href: notif.link,\n          variant: \"outlined\",\n          sx: {\n            borderRadius: 3,\n            fontWeight: 600,\n            minWidth: 110\n          },\n          children: \"Listen now!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, notif.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_c = Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["React","Container","Typography","Box","Avatar","Paper","Stack","Button","AccountCircleIcon","jsxDEV","_jsxDEV","notifications","id","user","type","message","link","Notification","maxWidth","sx","mt","mb","children","variant","fontWeight","align","fileName","_jsxFileName","lineNumber","columnNumber","spacing","map","notif","elevation","borderRadius","p","px","display","alignItems","justifyContent","bgcolor","mr","width","height","fontSize","href","minWidth","_c","$RefreshReg$"],"sources":["C:/Users/PC-L/Desktop/NewHarmonies/gateway-user-song/1892929_NewHarmonics/source/frontend/src/routes/Notification.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Avatar,\r\n  Paper,\r\n  Stack,\r\n  Button\r\n} from '@mui/material';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\n\r\n// Example notifications, replace with your dynamic data!\r\nconst notifications = [\r\n  {\r\n    id: 1,\r\n    user: 'Username',\r\n    type: 'posted',\r\n    message: 'posted a new song!',\r\n    link: '/song/1'\r\n  },\r\n  {\r\n    id: 2,\r\n    user: 'Username',\r\n    type: 'liked',\r\n    message: 'liked your song!',\r\n    link: '/song/2'\r\n  },\r\n  {\r\n    id: 3,\r\n    user: 'Username',\r\n    type: 'posted',\r\n    message: 'posted a new song!',\r\n    link: '/song/3'\r\n  }\r\n];\r\n\r\nexport default function Notification() {\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ mt: 6, mb: 6 }}>\r\n      <Typography variant=\"h5\" fontWeight={600} align=\"center\" sx={{ mb: 4 }}>\r\n        Latest\r\n      </Typography>\r\n      <Stack spacing={4}>\r\n        {notifications.map(notif => (\r\n          <Paper\r\n            key={notif.id}\r\n            elevation={2}\r\n            sx={{\r\n              borderRadius: 4,\r\n              p: 2,\r\n              px: 4,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'space-between'\r\n            }}\r\n          >\r\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n              <Avatar sx={{\r\n                bgcolor: '#7e57c2',\r\n                mr: 2,\r\n                width: 56,\r\n                height: 56\r\n              }}>\r\n                <AccountCircleIcon fontSize=\"large\" />\r\n              </Avatar>\r\n              <Typography fontSize={20} fontWeight={500}>\r\n                <b>{notif.user}</b> {notif.message}\r\n              </Typography>\r\n            </Box>\r\n            <Button\r\n              href={notif.link}\r\n              variant=\"outlined\"\r\n              sx={{ borderRadius: 3, fontWeight: 600, minWidth: 110 }}\r\n            >\r\n              Listen now!\r\n            </Button>\r\n          </Paper>\r\n        ))}\r\n      </Stack>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}