# ============================================
# API GATEWAY CONFIGURATION
# ============================================

server.port=9000
spring.application.name=api_gateway

# JWT Configuration
jwt.secret=UmVhbGx5U3Ryb25nU2VjcmV0S2V5Rm9yTmV3SGFybW9uaWVzQXBwV2l0aEV4dHJhQnl0ZXNGb3IyNTZCaXRz
jwt.expiration=86400000

# ============================================
# CORS CONFIGURATION
# ============================================

spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:3000,http://frontend:3000
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true
spring.cloud.gateway.globalcors.cors-configurations.[/**].max-age=3600

# ============================================
# GATEWAY ROUTES
# ============================================

# PUBLIC ROUTES (no JWT validation)

# Auth - Login (PUBLIC)
spring.cloud.gateway.routes[0].id=auth-login
spring.cloud.gateway.routes[0].uri=http://user-service:8080
spring.cloud.gateway.routes[0].predicates[0]=Path=/auth/login
spring.cloud.gateway.routes[0].predicates[1]=Method=POST

# Auth - Register (PUBLIC)
spring.cloud.gateway.routes[1].id=auth-register
spring.cloud.gateway.routes[1].uri=http://user-service:8080
spring.cloud.gateway.routes[1].predicates[0]=Path=/auth/register
spring.cloud.gateway.routes[1].predicates[1]=Method=POST

# Songs - Public browsing (GET only)
spring.cloud.gateway.routes[2].id=songs-public
spring.cloud.gateway.routes[2].uri=http://song-service:8082
spring.cloud.gateway.routes[2].predicates[0]=Path=/songs,/songs/{id},/songs/artist/{artistId}
spring.cloud.gateway.routes[2].predicates[1]=Method=GET

# ? NEW: Auth - Validate (PUBLIC) - Insert this as route [3] ?
spring.cloud.gateway.routes[3].id=auth-validate
spring.cloud.gateway.routes[3].uri=http://user-service:8080
spring.cloud.gateway.routes[3].predicates[0]=Path=/auth/validate
spring.cloud.gateway.routes[3].predicates[1]=Method=GET

# PROTECTED ROUTES (JWT validation required)

# Auth - Other endpoints (validate, etc.)
spring.cloud.gateway.routes[4].id=auth-protected
spring.cloud.gateway.routes[4].uri=http://user-service:8080
spring.cloud.gateway.routes[4].predicates[0]=Path=/auth/**

# Users - All endpoints
spring.cloud.gateway.routes[5].id=user-service-route
spring.cloud.gateway.routes[5].uri=http://user-service:8080
spring.cloud.gateway.routes[5].predicates[0]=Path=/users/**

# Songs - Protected operations (upload, update, delete)
spring.cloud.gateway.routes[6].id=songs-service-route
spring.cloud.gateway.routes[6].uri=http://song-service:8082
spring.cloud.gateway.routes[6].predicates[0]=Path=/songs/**

# Notifications/Feed
spring.cloud.gateway.routes[7].id=feed-route
spring.cloud.gateway.routes[7].uri=http://notification-service:8083
spring.cloud.gateway.routes[7].predicates[0]=Path=/feed/**

# Logging
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.web=DEBUG