# ============================================
# API GATEWAY CONFIGURATION
# ============================================

server.port=9000
spring.application.name=api_gateway

# JWT Configuration
jwt.secret=UmVhbGx5U3Ryb25nU2VjcmV0S2V5Rm9yTmV3SGFybW9uaWVzQXBwV2l0aEV4dHJhQnl0ZXNGb3IyNTZCaXRz
jwt.expiration=86400000

# ============================================
# CORS CONFIGURATION
# ============================================

spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:3000,http://frontend:3000
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true
spring.cloud.gateway.globalcors.cors-configurations.[/**].max-age=3600

# ============================================
# GATEWAY ROUTES (Corrected Indexing)
# ============================================

# --- PUBLIC ROUTES (Index 0 to 2) ---
# PUBLIC ROUTES (no JWT validation)

# Route 0: Auth - Login (PUBLIC)
spring.cloud.gateway.routes[0].id=auth-login
spring.cloud.gateway.routes[0].uri=http://user-service:8080
spring.cloud.gateway.routes[0].predicates[0]=Path=/auth/login
spring.cloud.gateway.routes[0].predicates[1]=Method=POST
# Note: A JWT filter/rewrite is usually applied to protected routes, not public login.

# Route 1: Auth - Register (PUBLIC)
spring.cloud.gateway.routes[1].id=auth-register
spring.cloud.gateway.routes[1].uri=http://user-service:8080
spring.cloud.gateway.routes[1].predicates[0]=Path=/auth/register
spring.cloud.gateway.routes[1].predicates[1]=Method=POST

# Route 2: Songs - Public browsing (GET only)
spring.cloud.gateway.routes[2].id=songs-public
spring.cloud.gateway.routes[2].uri=http://song-service:8082
spring.cloud.gateway.routes[2].predicates[0]=Path=/songs,/songs/{id},/songs/artist/{artistId}
spring.cloud.gateway.routes[2].predicates[1]=Method=GET

# Route 3: Song Search/Trending (PUBLIC GETs, assuming it routes to song-service now)
# Original logic for song-search has been merged/split based on what's public/protected.
# The original song-search logic was: Path=/songs/search, /songs/trending, /songs/recent and Method=GET
# '/songs/trending' and '/songs/recent' are covered by Route 2. We'll keep '/songs/search' here if it needs a specific setup.
spring.cloud.gateway.routes[3].id=song-search-public
spring.cloud.gateway.routes[3].uri=http://song-service:8082
spring.cloud.gateway.routes[3].predicates[0]=Path=/songs/search

# --- PROTECTED ROUTES (Index 4 to 7) ---
# These routes MUST have a JWT validation filter applied via GatewayFilters, which is NOT defined here.

# Route 4: Auth - Other endpoints (validate, etc.) (PROTECTED)
spring.cloud.gateway.routes[4].id=auth-protected
spring.cloud.gateway.routes[4].uri=http://user-service:8080
spring.cloud.gateway.routes[4].predicates[0]=Path=/auth/**
# Recommended: Add an implicit filter for JWT validation here, e.g.:
# .filters[0]=RemoveRequestHeader=Cookie
# .filters[1]=TokenRelay=Authorization
# ? NEW: Auth - Validate (PUBLIC) - Insert this as route [3] ?
#spring.cloud.gateway.routes[3].id=auth-validate
#spring.cloud.gateway.routes[3].uri=http://user-service:8080
#spring.cloud.gateway.routes[3].predicates[0]=Path=/auth/validate
#spring.cloud.gateway.routes[3].predicates[1]=Method=GET

# Route 5: Users - All endpoints (PROTECTED)
spring.cloud.gateway.routes[5].id=user-service-route
spring.cloud.gateway.routes[5].uri=http://user-service:8080
spring.cloud.gateway.routes[5].predicates[0]=Path=/users/**

# Route 6: Songs - Protected operations (upload, update, delete) (PROTECTED)
spring.cloud.gateway.routes[6].id=songs-service-route
spring.cloud.gateway.routes[6].uri=http://song-service:8082
spring.cloud.gateway.routes[6].predicates[0]=Path=/songs/**

# Route 7: Notifications/Feed (PROTECTED)
spring.cloud.gateway.routes[7].id=feed-service-route
spring.cloud.gateway.routes[7].uri=http://song-service:8082
spring.cloud.gateway.routes[7].predicates[0]=Path=/feed/**
spring.cloud.gateway.routes[7].predicates[1]=Method=GET

# Route 8: Notifications - All endpoints (PROTECTED) - NEW
spring.cloud.gateway.routes[8].id=notification-service-route
spring.cloud.gateway.routes[8].uri=http://notification-service:8083
spring.cloud.gateway.routes[8].predicates[0]=Path=/notifications/**

# Logging
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.web=DEBUG