{"ast":null,"code":"const API_URL = \"http://localhost:8080\"; // Using the direct user service port for now\n\n// Esempio di funzione login\nexport async function login(email, password) {\n  const res = await fetch(`${API_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  if (!res.ok) {\n    const errorText = await res.text();\n    throw new Error(`API error: ${res.status} - ${errorText}`);\n  }\n  return res.json();\n}\nexport async function register(user) {\n  const res = await fetch(`${API_URL}/users`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  });\n  if (!res.ok) {\n    const errorText = await res.text();\n    throw new Error(`API error: ${res.status} - ${errorText}`);\n  }\n  return res.json();\n}","map":{"version":3,"names":["API_URL","login","email","password","res","fetch","method","headers","body","JSON","stringify","ok","errorText","text","Error","status","json","register","user"],"sources":["/Users/onorio21/VSCode/NuwHarmonics/1892929_NewHarmonics/newharmonics/src/api/api.js"],"sourcesContent":["const API_URL = \"http://localhost:8080\"; // Using the direct user service port for now\n\n// Esempio di funzione login\nexport async function login(email, password) {\n  const res = await fetch(`${API_URL}/login`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ email, password }),\n  });\n  if (!res.ok) {\n    const errorText = await res.text();\n    throw new Error(`API error: ${res.status} - ${errorText}`);\n  }\n  return res.json();\n}\n\nexport async function register(user) {\n  const res = await fetch(`${API_URL}/users`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(user),\n  });\n  if (!res.ok) {\n    const errorText = await res.text();\n    throw new Error(`API error: ${res.status} - ${errorText}`);\n  }\n  return res.json();\n}\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAuB,CAAC,CAAC;;AAEzC;AACA,OAAO,eAAeC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EAC3C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,QAAQ,EAAE;IAC1CM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACO,EAAE,EAAE;IACX,MAAMC,SAAS,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAClC,MAAM,IAAIC,KAAK,CAAC,cAAcV,GAAG,CAACW,MAAM,MAAMH,SAAS,EAAE,CAAC;EAC5D;EACA,OAAOR,GAAG,CAACY,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeC,QAAQA,CAACC,IAAI,EAAE;EACnC,MAAMd,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,QAAQ,EAAE;IAC1CM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACQ,IAAI;EAC3B,CAAC,CAAC;EACF,IAAI,CAACd,GAAG,CAACO,EAAE,EAAE;IACX,MAAMC,SAAS,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAClC,MAAM,IAAIC,KAAK,CAAC,cAAcV,GAAG,CAACW,MAAM,MAAMH,SAAS,EAAE,CAAC;EAC5D;EACA,OAAOR,GAAG,CAACY,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}