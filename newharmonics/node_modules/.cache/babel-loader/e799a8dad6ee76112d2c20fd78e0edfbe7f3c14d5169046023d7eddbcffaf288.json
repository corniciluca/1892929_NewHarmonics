{"ast":null,"code":"var _jsxFileName = \"/Users/onorio21/VSCode/NuwHarmonics/1892929_NewHarmonics/newharmonics/src/routes/test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n\n// Gateway API endpoint\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:9000/songs\";\nexport default function SongListTest() {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    fetch(API_URL).then(r => {\n      if (!r.ok) throw new Error(`Error ${r.status}: ${r.statusText}`);\n      return r.json();\n    }).then(data => {\n      setSongs(data);\n      setError(null);\n    }).catch(e => setError(e.message)).finally(() => setLoading(false));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 600,\n      margin: \"2em auto\",\n      fontFamily: \"sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), !loading && !error && songs.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No songs found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: songs.map((s, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: s.title || \"(untitled)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), s.artist && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\" by \", s.artist]\n        }, void 0, true), s.album && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\" \\u2014 Album: \", s.album]\n        }, void 0, true), s.genre && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\" \\u2014 Genre: \", s.genre]\n        }, void 0, true)]\n      }, s.id || idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(SongListTest, \"qM0HmI/m6V2iAref2kYw/Dkd5C0=\");\n_c = SongListTest;\nvar _c;\n$RefreshReg$(_c, \"SongListTest\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","SongListTest","_s","songs","setSongs","loading","setLoading","error","setError","fetch","then","r","ok","Error","status","statusText","json","data","catch","e","message","finally","style","maxWidth","margin","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","color","length","map","s","idx","title","artist","album","genre","id","_c","$RefreshReg$"],"sources":["/Users/onorio21/VSCode/NuwHarmonics/1892929_NewHarmonics/newharmonics/src/routes/test.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n// Gateway API endpoint\nconst API_URL = \"http://localhost:9000/songs\";\n\nexport default function SongListTest() {\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(API_URL)\n      .then(r => {\n        if (!r.ok) throw new Error(`Error ${r.status}: ${r.statusText}`);\n        return r.json();\n      })\n      .then(data => {\n        setSongs(data);\n        setError(null);\n      })\n      .catch(e => setError(e.message))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <div style={{ maxWidth: 600, margin: \"2em auto\", fontFamily: \"sans-serif\" }}>\n      <h2>All Songs</h2>\n      {loading && <div>Loading…</div>}\n      {error && <div style={{ color: \"red\" }}>Error: {error}</div>}\n      {(!loading && !error && songs.length === 0) && (\n        <div>No songs found.</div>\n      )}\n      <ul>\n        {songs.map((s, idx) => (\n          <li key={s.id || idx}>\n            <b>{s.title || \"(untitled)\"}</b>\n            {s.artist && <> by {s.artist}</>}\n            {s.album && <> — Album: {s.album}</>}\n            {s.genre && <> — Genre: {s.genre}</>}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}